import random

import pygame
from pygame.event import wait

x = 1050; y = 750; a = False; s = False; w = False; d = False; point = 0
pygame.init()
GameSurface = pygame.display.set_mode((x, y))
Clock = pygame.time.Clock()
pos1 = [
    "nil",
    x/2,
    y/10*9,
    0.5,
]
pos2 = [
    'nil',
    x/2,
    y/2,
    0.5,
]
pos2m = [
    'nil',
    x/-100,
    y/-200,
    0.01,
]
def resetball():
    pos2 = [
        'nil',
        x/2,
        y/2,
        0.5,
    ]
    pos2m = [
        'nil',
        x/100*random.randint(-1,1),
        y/200*random.randint(-1,1)+0.9,
        0.01,
    ]
    return 'nil', pos2, pos2m
pos3 = [
    "nil",
    x/2,
    y/10,
    0.5,
]
def rnd(z):
    return min(max(round(255-z*255),50),255)

def mth(xx,xy,xyx): #Day 3, Day 5 Still not working :skull:, Day 6, Day 7 IT'S ALIVE BABY
    a=0; b=0
    if pos2[1] > pos1[1]-xx and pos2[1] < pos1[1]+xx:
        a = 1
    if pos2[1] > pos3[1]-xx and pos2[1] < pos3[1]+xx:
        b = 1
    if a != 1 and b != 1:
        return(False)
    if pos1[2] > pos2[2]-xy and pos1[2] < pos2[2]+xy:
        a = a+1
    if pos3[2] > pos2[2]-xy and pos3[2] < pos2[2]+xy:
        b = b+1
    if a != 2 and b != 2:
        return(False)
    if pos1[3] > pos2[3]-xyx and pos1[3] < pos2[3]+xyx:
        a = a+1
    if pos3[3] > pos2[3]-xyx and pos3[3] < pos2[3]+xyx:
        b = b+1
    if a != 3 and b != 3:
        return(False)
    else:
        return(True)
        
print("Type disconnect to exit(at the start of each loop)")
while True:
    #Game Day1
    pygame.display.update()
    Clock.tick(32)
    GameSurface.fill(pygame.Color(0,0,0))
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            break
    #Player Day1
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_a:
                a = True
            elif event.key == pygame.K_d:
                d = True
            elif event.key == pygame.K_w:
                w = True
            elif event.key == pygame.K_s:
                s = True
        if event.type == pygame.KEYUP:
            if event.key == pygame.K_a:
                a = False
            elif event.key == pygame.K_d:
                d = False
            elif event.key == pygame.K_w:
                w = False
            elif event.key == pygame.K_s:
                s = False
    if a and pos1[1]>0:
        pos1[1] = pos1[1] - 8
    elif d and pos1[1]<x-120:
        pos1[1] = pos1[1] + 8 
    if w and pos1[3]<1:
        pos1[3] = pos1[3] + 0.05
    elif s and pos1[3]>0:
        pos1[3] = pos1[3] - 0.05

    #Ball Day2
    if pos2[1]>x-25 or pos2[1]<25:
        pos2m[1] = pos2m[1]*-1.01
        if pos2[1]>x+50 or pos2[1]<-50:
            pos2=resetball()[1];pos2m=resetball()[2]
            #Added Points (Day 5(before it was just the x code but with y instead))
    if pos2[2]>y-25 or pos2[2]<25:
        if pos2[2]>y-25:
            point = 0; print("You Lost")
        elif pos2[2]<25:
            point = point+1; print("You Scored, Goal:", point)
        pos2=resetball()[1]; pos2m=resetball()[2]
    if pos2[3]>1 or pos2[3]<0:
        pos2m[3] = pos2m[3]*-1

    #AI Day3
    if pos3[1]>pos2[1]:
        pos3[1] = pos3[1]-4
    elif pos3[1]<pos2[1]:
        pos3[1] = pos3[1]+4
    if pos3[3]+0.05<pos2[3]:
        pos3[3] = pos3[3]+0.05
    elif pos3[3]-0.05>pos2[3]:
        pos3[3] = pos3[3]-0.05

    #Collision Day3,Day4,Day5, Day6, Day7 (Pain in the a**)
    if mth(60,60,0.10):
        pos2m[2] = (pos2m[2]+random.randint(-1,1)/15)*-1
        for i in range(2):
            pos2[i+1] = pos2[i+1] + pos2m[i+1]*5

    #Ball Momentum Calc Day2     
    for i in range(3):
        pos2[i+1] = pos2[i+1] + pos2m[i+1]


    #Creation of objects
    pygame.draw.rect(GameSurface,pygame.Color(rnd(pos1[3]),rnd(pos1[3]),rnd(pos1[3])), (pos1[1]-60,pos1[2],120-pos1[3]*12,35-pos1[3]*3.5))
    pygame.draw.rect(GameSurface,pygame.Color(rnd(pos3[3]),rnd(pos3[3]),rnd(pos3[3])), (pos3[1],pos3[2],120-pos3[3]*12,35-pos3[3]*3.5))
    pygame.draw.circle(GameSurface,pygame.Color(rnd(pos2[3]),rnd(pos2[3]),rnd(pos2[3])), (pos2[1],pos2[2]), (max(35-pos2[3]*10,15)))
